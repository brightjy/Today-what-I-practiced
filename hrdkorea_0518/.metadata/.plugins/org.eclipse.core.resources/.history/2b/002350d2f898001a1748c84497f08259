package com.hrd.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.hrd.dto.MemberDto;

public class MemberDao {
	// 싱글톤
	private static MemberDao instance = new MemberDao(); 
	private MemberDao() {}
	public static MemberDao getInstance() {
		return instance;
	}
	// 데이터 연결
	public static Connection getConnection() throws Exception {
		Class.forName("oracle.jdbc.OracleDriver");
		Connection con = DriverManager.getConnection
				("jdbc:oracle:thin:@//localhost:1521/xe", "system", "1234");
		return con;
	}
	// 회원번호 자동생성
	public int custno() {
		int custno = 0;
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String sql = "SELECT MAX(CUSTNO)+1 CUSTNO FROM MEMBER_TBL_02";
		
		
		try {
			conn = getConnection();
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			if(rs.next()) {
				custno = rs.getInt("custno");
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			try {
				if(conn!=null) conn.close();
				if(pstmt!=null) pstmt.close();
				if(rs!=null) rs.close();
			}catch(Exception e) {
				System.out.println(e.getMessage());
			}
		}		
		return custno;
	}
	// 회원등록
	public int registerMember(String custname, String phone, String address, Date joindate, String grade, String city) {
		int result = 0;
		Connection conn = null;
		PreparedStatement pstmt = null;
		String sql = "INSERT INTO MEMBER_TBL_02" + 
				"    VALUES (CUSTNO_SQ.NEXTVAL, ?, ?, ?, ?, ?, ?)";
		try {
			conn = getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, custname);
			pstmt.setString(2, phone);
			pstmt.setString(3, address);
			pstmt.setDate(4, joindate);
			pstmt.setString(5, grade);
			pstmt.setString(6, city);
			result = pstmt.executeUpdate();
			System.out.println(result==1?"등록성공":"등록실패");
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return result;
	}
	// 회원목록 조회
	// 회원정보 불러오기
	// 회원정보 수정
	// 회원매출 정보 조회(custno, custname, grade, sum(price))
	
}
